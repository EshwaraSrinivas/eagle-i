{"version":3,"sources":["images/logo.png","components/header/Header.js","components/settings/Settings.js","components/profile/Profile.js","components/apps/AppItem.js","components/apps/AppsList.js","components/home/Home.js","components/login/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","src","Image","alt","React","Component","Settings","state","appname","appurl","nonprod","prod","onFormSubmit","event","preventDefault","onAppNameChange","_this","setState","target","value","onAppUrlChange","saveAppData","console","log","_this2","this","onSubmit","type","onChange","name","e","disabled","onClick","Profile","appList","_ref","app","concat","href","apps","appUrl","AppsList","renderedList","map","AppItem","key","Home","components_apps_AppsList","Login","class","placeholder","tabIndex","App","BrowserRouter","components_header_Header","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iZCoCzBC,mLA7BX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACPL,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBG,IAAKC,IAAOC,IAAI,KAA5D,aAGJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aACPL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAInBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UACPL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCArBRM,IAAMC,WCuFZC,oNAxFbC,MAAQ,CAAEC,QAAS,GAAIC,OAAQ,GAAIC,SAAS,EAAOC,MAAM,KACzDC,aAAe,SAAAC,GACbA,EAAMC,oBAGRC,gBAAkB,SAAAF,GAChBG,EAAKC,SAAS,CAAET,QAASK,EAAMK,OAAOC,WAGxCC,eAAiB,SAAAP,GACfG,EAAKC,SAAS,CAAER,OAAQI,EAAMK,OAAOC,WAGvCE,YAAc,WACVC,QAAQC,IAAIP,EAAKT,gFAGZ,IAAAiB,EAAAC,KACP,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAU4B,SAAUD,KAAKb,cACvCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACLR,MAAOM,KAAKlB,MAAMC,QAClBoB,SAAUH,KAAKV,mBAGnBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACLR,MAAOM,KAAKlB,MAAME,OAClBmB,SAAUH,KAAKL,kBAGnBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLE,KAAK,MACLV,MAAOM,KAAKlB,MAAMG,QAClBkB,SAAU,SAAAE,GACRN,EAAKP,SAAS,CAACN,MAAM,IACrBa,EAAKP,SAAS,CAACP,SAAgC,IAAvBc,EAAKjB,MAAMG,aAGvCf,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLE,KAAK,MACLV,MAAOM,KAAKlB,MAAMI,KAClBiB,SAAU,SAAAE,GACRN,EAAKP,SAAS,CAACP,SAAS,IACxBc,EAAKP,SAAS,CAACN,MAA0B,IAApBa,EAAKjB,MAAMI,UAGpChB,EAAAC,EAAAC,cAAA,yBAKRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACViC,SAAiC,KAAvBN,KAAKlB,MAAMC,SAAwC,KAAtBiB,KAAKlB,MAAME,SAAmBgB,KAAKlB,MAAMG,UAAYe,KAAKlB,MAAMI,KACvGqB,QAASP,KAAKJ,aAHhB,mBA1ESjB,IAAMC,YCUd4B,0LARP,OACItC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAHLM,IAAMC,YCWb6B,SAZC,SAAAC,GAAW,IAATC,EAASD,EAATC,IACd,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,SAAAuC,OAAWD,EAAI5B,QAAf,0BACZb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASwC,KAAMF,EAAI3B,QAAS2B,EAAI5B,SAC7Cb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,2BCJVyC,SAAO,CACT,CACI/B,QAAS,WACTgC,OAAQ,4BAEZ,CACIhC,QAAS,SACTgC,OAAQ,4BAoBDC,mLAdP,IAAMC,EAAeH,EAAKI,IAAI,SAACP,GAC3B,OACIzC,EAAAC,EAAAC,cAAC+C,EAAD,CAASC,IAAKT,EAAI5B,QAAS4B,IAAKA,MAIxC,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACV4C,UAXMtC,IAAMC,WCGdyC,mLAXP,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAAlB,iBAEJH,EAAAC,EAAAC,cAACkD,EAAD,cAPG3C,IAAMC,WCiCV2C,0LAhCP,OACIrD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,2DACPtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAAd,SACAH,EAAAC,EAAAC,cAAA,QAAMoD,MAAM,WACRtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,SACPtD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAjB,aACAH,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,sBACPtD,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOuB,YAAY,oBAC/BvD,EAAAC,EAAAC,cAAA,KAAGoD,MAAM,gBAGjBtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,SACPtD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAjB,YACAH,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,sBACPtD,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOuB,YAAY,mBAC/BvD,EAAAC,EAAAC,cAAA,KAAGoD,MAAM,oBAGjBtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,2CAA2CE,SAAS,KAC3DxD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,mBAAX,SACAtD,EAAAC,EAAAC,cAAA,OAAKoD,MAAM,kBACPtD,EAAAC,EAAAC,cAAA,KAAGoD,MAAM,6BAxBrB7C,IAAMC,YCsBX+C,mLAdX,OACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWZ,IACxCnD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWV,IAChCrD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWzB,IAClCtC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWpD,aAT3BD,aCGEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c5d0a239.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f2195c.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\nimport Image from \"../../images/logo.png\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <ul className=\"links\">\r\n          <li>\r\n            <Link to=\"/\">\r\n              <span><img className=\"ui avatar image logo\" src={Image} alt=\"\" />Eagle-I</span>\r\n            </Link>\r\n          </li>\r\n          <div className=\"spacer\" />\r\n          <li>\r\n            <Link to=\"/settings\">\r\n              <button className=\"circular ui icon button settings-button\">\r\n                <i className=\"icon settings big black\" />\r\n              </button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/login\">\r\n              <button className=\"circular ui icon button settings-button\">\r\n                <i className=\"icon user big black\" />\r\n              </button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Settings.css\";\r\n\r\nclass Settings extends React.Component {\r\n  state = { appname: \"\", appurl: \"\", nonprod: false, prod: false };\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  onAppNameChange = event => {\r\n    this.setState({ appname: event.target.value });\r\n  };\r\n\r\n  onAppUrlChange = event => {\r\n    this.setState({ appurl: event.target.value });\r\n  };\r\n\r\n  saveAppData = () => {\r\n      console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"ui segment settings-form\">\r\n          <div className=\"form-name\">Add Application</div>\r\n          <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n            <div className=\"field\">\r\n              <label>App name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.appname}\r\n                onChange={this.onAppNameChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>App url</label>\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.appurl}\r\n                onChange={this.onAppUrlChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"inline fields\">\r\n                <label>Select Environment</label>\r\n                <div className=\"field\">\r\n                  <div className=\"ui radio checkbox\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"env\"\r\n                      value={this.state.nonprod}\r\n                      onChange={e => {\r\n                        this.setState({prod: false})\r\n                        this.setState({nonprod: this.state.nonprod === false ? true : false})\r\n                      }}\r\n                    />\r\n                    <label>Non prod</label>\r\n                  </div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <div className=\"ui radio checkbox\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"env\"\r\n                      value={this.state.prod}\r\n                      onChange={e => {\r\n                        this.setState({nonprod: false})\r\n                        this.setState({prod: this.state.prod === false ? true : false})\r\n                      }}\r\n                    />\r\n                    <label>prod</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field button-save\">\r\n              <button\r\n                className=\"ui primary button\"\r\n                disabled={this.state.appname === \"\" || this.state.appurl === \"\" || (!this.state.nonprod && !this.state.prod)}\r\n                onClick={this.saveAppData}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport './Profile.css';\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nconst appList = ({app}) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <i className={`large ${app.appname} middle aligned icon`}></i>\r\n            <div className=\"content\">\r\n                <a className=\"header\" href={app.appurl}>{app.appname}</a>\r\n                <div className=\"description\">Updated 10 mins ago</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default appList;","import React from 'react';\r\nimport AppItem from './AppItem';\r\nimport './AppsList.css';\r\n\r\nconst apps = [\r\n    {\r\n        appname: 'facebook',\r\n        appUrl: 'https://www.facebook.com'\r\n    },\r\n    {\r\n        appname: 'google',\r\n        appUrl: 'https://www.google.com'\r\n    }\r\n]\r\nclass AppsList extends React.Component{\r\n    \r\n    render(){\r\n        const renderedList = apps.map((app) => {\r\n            return (\r\n                <AppItem key={app.appname} app={app}/>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {renderedList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppsList;","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport AppList from '../apps/AppsList';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"applications\">\r\n                <div className=\"test-status\">\r\n                    <button className=\"ui button button-status\">Check Status</button>\r\n                </div>\r\n                <AppList />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport './login.css';\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"ui raised very padded text container segment login-main\">\r\n                <div className=\"login-content\">\r\n                    <h2 className=\"center-text login-header\">Login</h2>\r\n                    <form class=\"ui form\">\r\n                        <div class=\"field\">\r\n                            <label className=\"user-name\">User Name</label>\r\n                            <div class=\"ui left icon input\">\r\n                                <input type=\"text\" placeholder=\"Enter user name\"/>\r\n                                <i class=\"user icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <label className=\"password\">Password</label>\r\n                            <div class=\"ui left icon input\">\r\n                                <input type=\"text\" placeholder=\"Enter password\"/>\r\n                                <i class=\"keyboard icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"ui animated primary button right floated\" tabIndex=\"0\">\r\n                            <div class=\"visible content\">Login</div>\r\n                            <div class=\"hidden content\">\r\n                                <i class=\"sign-in icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </form>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from '../src/components/header/Header';\r\nimport Settings from '../src/components/settings/Settings'\r\nimport Profile from './components/profile/Profile';\r\nimport Home from './components/home/Home';\r\nimport Login from './components/login/login';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app ui container\">\r\n          <Header />\r\n          <Route exact={true} path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/profile\" component={Profile}></Route>\r\n          <Route path=\"/settings\" component={Settings}></Route>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}